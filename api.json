{
    "openapi": "3.1.0",
    "info": {
        "title": "Dokumentasi API Timedoor Backend",
        "version": "0.0.1",
        "description": "Aplikasi ini adalah sistem rating toko buku.\n\n Tujuan utama:\n - Menampilkan daftar buku yang dapat difilter dan diurutkan berdasarkan rating.\n - Menampilkan top 10 penulis terpopuler berdasarkan jumlah voter (rating > 5).\n - Memungkinkan pengguna untuk memberi rating pada buku.\n\n Fitur Utama:\n 1. Daftar Buku dengan Filter:\n    - Tampilan Default: 10 buku teratas berdasarkan avg_rating tertinggi.\n    - Filter Jumlah Data: Dropdown untuk menampilkan 10, 20, 30, atau 100 item per halaman.\n    - Pencarian: Input untuk mencari buku berdasarkan judul atau nama penulis.\n    - Pengurutan: Berdasarkan rata-rata rating tertinggi.\n    - Data yang Ditampilkan: Judul buku, Penulis, Rata-rata rating, Jumlah voter, Tahun terbit.\n 2. Top 10 Penulis Terpopuler:\n    - Berdasarkan jumlah voter yang memberi rating di atas 5.\n    - Diurutkan secara descending berdasarkan jumlah voter.\n    - Data yang Ditampilkan: Nama penulis, Jumlah voter, Rata-rata rating bukunya.\n 3. Input Rating:\n    - Dropdown untuk memilih buku (dapat difilter berdasarkan penulis).\n    - Dropdown untuk memilih rating (1 \u2013 10).\n    - Textarea untuk komentar (opsional).\n    - Validasi: Rating harus angka 1-10 dan buku harus valid.\n    - Setelah submit, akan redirect kembali ke Daftar Buku.\n\n Contoh Penggunaan API:\n - GET /api/v1/books\n - GET /api/v1/books/{id}\n - GET /api/v1/authors\n - GET /api/v1/authors/top (untuk 10 penulis teratas)\n - POST /api/v1/ratings"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "url"
        }
    ],
    "paths": {
        "/v1/authors/top": {
            "get": {
                "operationId": "author.top",
                "description": "Mengambil daftar 10 penulis teratas berdasarkan jumlah rating di atas 5.",
                "summary": "Dapatkan 10 Penulis Teratas",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/authors": {
            "get": {
                "operationId": "authors.index",
                "description": "Mengambil daftar penulis yang sudah dipaginasi, dengan 10 item per halaman.",
                "summary": "Dapatkan Semua Penulis (Terpaginasi)",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "authors.store",
                "description": "Menyimpan penulis yang baru dibuat ke dalam database.",
                "summary": "Buat Penulis Baru",
                "tags": [
                    "Author"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAuthorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/authors/{author}": {
            "get": {
                "operationId": "authors.show",
                "description": "Mengambil detail penulis tertentu berdasarkan ID.",
                "summary": "Dapatkan Detail Penulis",
                "tags": [
                    "Author"
                ],
                "parameters": [
                    {
                        "name": "author",
                        "in": "path",
                        "required": true,
                        "description": "The author ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "authors.update",
                "description": "Memperbarui detail penulis tertentu berdasarkan ID.",
                "summary": "Perbarui Penulis",
                "tags": [
                    "Author"
                ],
                "parameters": [
                    {
                        "name": "author",
                        "in": "path",
                        "required": true,
                        "description": "The author ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAuthorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "authors.destroy",
                "description": "Menghapus penulis tertentu berdasarkan ID.",
                "summary": "Hapus Penulis",
                "tags": [
                    "Author"
                ],
                "parameters": [
                    {
                        "name": "author",
                        "in": "path",
                        "required": true,
                        "description": "The author ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/books": {
            "get": {
                "operationId": "books.index",
                "description": "Mengambil daftar buku yang sudah dipaginasi, dengan 10 item per halaman.",
                "summary": "Dapatkan Semua Buku (Terpaginasi)",
                "tags": [
                    "Book"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "books.store",
                "description": "Menyimpan buku yang baru dibuat ke dalam database.",
                "summary": "Buat Buku Baru",
                "tags": [
                    "Book"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/books/{book}": {
            "get": {
                "operationId": "books.show",
                "description": "Mengambil detail buku tertentu berdasarkan ID.",
                "summary": "Dapatkan Detail Buku",
                "tags": [
                    "Book"
                ],
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "required": true,
                        "description": "The book ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "books.update",
                "description": "Memperbarui detail buku tertentu berdasarkan ID.",
                "summary": "Perbarui Buku",
                "tags": [
                    "Book"
                ],
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "required": true,
                        "description": "The book ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "books.destroy",
                "description": "Menghapus buku tertentu berdasarkan ID.",
                "summary": "Hapus Buku",
                "tags": [
                    "Book"
                ],
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "required": true,
                        "description": "The book ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/book-categories": {
            "get": {
                "operationId": "book-categories.index",
                "description": "Mengambil daftar kategori buku yang sudah dipaginasi, dengan 10 item per halaman.",
                "summary": "Dapatkan Semua Kategori Buku (Terpaginasi)",
                "tags": [
                    "BookCategory"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "book-categories.store",
                "description": "Menyimpan kategori buku yang baru dibuat ke dalam database.",
                "summary": "Buat Kategori Buku Baru",
                "tags": [
                    "BookCategory"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBookCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/book-categories/{bookCategory}": {
            "get": {
                "operationId": "book-categories.show",
                "description": "Mengambil detail kategori buku tertentu berdasarkan ID.",
                "summary": "Dapatkan Detail Kategori Buku",
                "tags": [
                    "BookCategory"
                ],
                "parameters": [
                    {
                        "name": "bookCategory",
                        "in": "path",
                        "required": true,
                        "description": "The book category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "book-categories.update",
                "description": "Memperbarui detail kategori buku tertentu berdasarkan ID.",
                "summary": "Perbarui Kategori Buku",
                "tags": [
                    "BookCategory"
                ],
                "parameters": [
                    {
                        "name": "bookCategory",
                        "in": "path",
                        "required": true,
                        "description": "The book category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBookCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "book-categories.destroy",
                "description": "Menghapus kategori buku tertentu berdasarkan ID.",
                "summary": "Hapus Kategori Buku",
                "tags": [
                    "BookCategory"
                ],
                "parameters": [
                    {
                        "name": "bookCategory",
                        "in": "path",
                        "required": true,
                        "description": "The book category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/categories": {
            "get": {
                "operationId": "categories.index",
                "description": "Mengambil daftar kategori yang sudah dipaginasi, dengan 10 item per halaman.",
                "summary": "Dapatkan Semua Kategori (Terpaginasi)",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "categories.store",
                "description": "Menyimpan kategori yang baru dibuat ke dalam database.",
                "summary": "Buat Kategori Baru",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/categories/{category}": {
            "get": {
                "operationId": "categories.show",
                "description": "Mengambil detail kategori tertentu berdasarkan ID.",
                "summary": "Dapatkan Detail Kategori",
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "categories.update",
                "description": "Memperbarui detail kategori tertentu berdasarkan ID.",
                "summary": "Perbarui Kategori",
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "categories.destroy",
                "description": "Menghapus kategori tertentu berdasarkan ID.",
                "summary": "Hapus Kategori",
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/ratings": {
            "get": {
                "operationId": "ratings.index",
                "description": "Mengambil daftar rating yang sudah dipaginasi, dengan 10 item per halaman.",
                "summary": "Dapatkan Semua Rating (Terpaginasi)",
                "tags": [
                    "Rating"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "ratings.store",
                "description": "Menyimpan rating yang baru dibuat ke dalam database.",
                "summary": "Buat Rating Baru",
                "tags": [
                    "Rating"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRatingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/ratings/{rating}": {
            "get": {
                "operationId": "ratings.show",
                "description": "Mengambil detail rating tertentu berdasarkan ID.",
                "summary": "Dapatkan Detail Rating",
                "tags": [
                    "Rating"
                ],
                "parameters": [
                    {
                        "name": "rating",
                        "in": "path",
                        "required": true,
                        "description": "The rating ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "ratings.update",
                "description": "Memperbarui detail rating tertentu berdasarkan ID.",
                "summary": "Perbarui Rating",
                "tags": [
                    "Rating"
                ],
                "parameters": [
                    {
                        "name": "rating",
                        "in": "path",
                        "required": true,
                        "description": "The rating ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRatingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "ratings.destroy",
                "description": "Menghapus rating tertentu berdasarkan ID.",
                "summary": "Hapus Rating",
                "tags": [
                    "Rating"
                ],
                "parameters": [
                    {
                        "name": "rating",
                        "in": "path",
                        "required": true,
                        "description": "The rating ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "operationId": "users.index",
                "description": "Mengambil daftar pengguna yang sudah dipaginasi, dengan 10 item per halaman.",
                "summary": "Dapatkan Semua Pengguna (Terpaginasi)",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "users.store",
                "description": "Menyimpan pengguna yang baru dibuat ke dalam database.",
                "summary": "Buat Pengguna Baru",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/users/{user}": {
            "get": {
                "operationId": "users.show",
                "description": "Mengambil detail pengguna tertentu berdasarkan ID.",
                "summary": "Dapatkan Detail Pengguna",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "users.update",
                "description": "Memperbarui detail pengguna tertentu berdasarkan ID.",
                "summary": "Perbarui Pengguna",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "users.destroy",
                "description": "Menghapus pengguna tertentu berdasarkan ID.",
                "summary": "Hapus Pengguna",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreAuthorRequest": {
                "type": "object",
                "description": "StoreAuthorRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bio": {
                        "type": "string",
                        "maxLength": 65535
                    }
                },
                "required": [
                    "name",
                    "bio"
                ],
                "title": "StoreAuthorRequest"
            },
            "StoreBookCategoryRequest": {
                "type": "object",
                "description": "StoreBookCategoryRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "book_id": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "book_id",
                    "category_id"
                ],
                "title": "StoreBookCategoryRequest"
            },
            "StoreBookRequest": {
                "type": "object",
                "description": "StoreBookRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "author_id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 65535
                    },
                    "published_year": {
                        "type": "integer"
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number"
                    }
                },
                "required": [
                    "title",
                    "author_id",
                    "description",
                    "published_year",
                    "stock",
                    "price"
                ],
                "title": "StoreBookRequest"
            },
            "StoreCategoryRequest": {
                "type": "object",
                "description": "StoreCategoryRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 65535
                    }
                },
                "required": [
                    "name",
                    "description"
                ],
                "title": "StoreCategoryRequest"
            },
            "StoreRatingRequest": {
                "type": "object",
                "description": "StoreRatingRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "book_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "book_id",
                    "user_id",
                    "rating"
                ],
                "title": "StoreRatingRequest"
            },
            "StoreUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name",
                    "email"
                ],
                "title": "StoreUserRequest"
            },
            "UpdateAuthorRequest": {
                "type": "object",
                "description": "UpdateAuthorRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bio": {
                        "type": "string",
                        "maxLength": 65535
                    }
                },
                "title": "UpdateAuthorRequest"
            },
            "UpdateBookCategoryRequest": {
                "type": "object",
                "description": "UpdateBookCategoryRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "book_id": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    }
                },
                "title": "UpdateBookCategoryRequest"
            },
            "UpdateBookRequest": {
                "type": "object",
                "description": "UpdateBookRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "author_id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 65535
                    },
                    "published_year": {
                        "type": "integer"
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number"
                    }
                },
                "title": "UpdateBookRequest"
            },
            "UpdateCategoryRequest": {
                "type": "object",
                "description": "UpdateCategoryRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 65535
                    }
                },
                "title": "UpdateCategoryRequest"
            },
            "UpdateRatingRequest": {
                "type": "object",
                "description": "UpdateRatingRequest\nGenerated by ModelSchema Enterprise Fragment Architecture",
                "properties": {
                    "book_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateRatingRequest"
            },
            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    }
                },
                "title": "UpdateUserRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}