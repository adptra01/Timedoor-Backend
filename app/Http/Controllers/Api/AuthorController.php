<?php

declare(strict_types=1);

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Http\Requests\User\StoreAuthorRequest;
use App\Http\Requests\User\UpdateAuthorRequest;
use App\Http\Resources\AuthorResource;
use App\Models\Author;
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;
use Illuminate\Support\Facades\DB;

/**
 * API AuthorController
 * Generated by ModelSchema Enterprise Fragment Architecture
 */
class AuthorController extends Controller
{
    /**
     * Display a listing of the top 10 authors.
     */
    public function top()
    {
        $authors = DB::table('authors')
            ->select('authors.id', 'authors.name', DB::raw('COUNT(ratings.id) AS voters'))
            ->join('books', 'books.author_id', '=', 'authors.id')
            ->join('ratings', 'ratings.book_id', '=', 'books.id')
            ->where('ratings.rating', '>', 5)
            ->groupBy('authors.id', 'authors.name')
            ->orderBy('voters', 'desc')
            ->limit(10)
            ->get();

        return response()->json($authors);
    }

    /**
     * Display a listing of the resource.
     */
    public function index(): AnonymousResourceCollection
    {
        $models = Author::paginate();

        return AuthorResource::collection($models);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StoreAuthorRequest $request): AuthorResource
    {
        $model = Author::create($request->validated());

        return new AuthorResource($model);
    }

    /**
     * Display the specified resource.
     */
    public function show(Author $model): AuthorResource
    {
        return new AuthorResource($model);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdateAuthorRequest $request, Author $model): AuthorResource
    {
        $model->update($request->validated());

        return new AuthorResource($model);
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Author $model): \Illuminate\Http\Response
    {
        $model->delete();

        return response()->noContent();
    }
}
