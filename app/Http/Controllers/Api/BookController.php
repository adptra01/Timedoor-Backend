<?php

declare(strict_types=1);

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Http\Requests\Book\StoreBookRequest;
use App\Http\Requests\Book\UpdateBookRequest;
use App\Http\Resources\BookResource;
use App\Models\Book;
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;

/**
 * @tag Book "Operations about books"
 *
 * API BookController
 * Generated by ModelSchema Enterprise Fragment Architecture
 */
class BookController extends Controller
{
    /**
     * Dapatkan Semua Buku (Terpaginasi)
     *
     * Mengambil daftar buku yang sudah dipaginasi, dengan 10 item per halaman.
     */
    /**
     * Dapatkan Semua Buku (Terpaginasi)
     *
     * Mengambil daftar buku yang sudah dipaginasi, dengan 10 item per halaman.
     *
     * @response 200 App\Http\Resources\BookResource[] "Paginated list of books"
     */
    public function index(): AnonymousResourceCollection
    {
        $books = Book::paginate(10);

        return BookResource::collection($books);
    }

    /**
     * Buat Buku Baru
     *
     * Menyimpan buku yang baru dibuat ke dalam database.
     */
    /**
     * Buat Buku Baru
     *
     * Menyimpan buku yang baru dibuat ke dalam database.
     *
     * @body App\Http\Requests\Book\StoreBookRequest "New book data"
     *
     * @response 200 App\Http\Resources\BookResource "Created book"
     * @response 422 App\Http\Responses\ValidationException "Validation error"
     */
    public function store(StoreBookRequest $request): BookResource
    {
        $book = Book::create($request->validated());

        return new BookResource($book);
    }

    /**
     * Dapatkan Detail Buku
     *
     * Mengambil detail buku tertentu berdasarkan ID.
     */
    /**
     * Dapatkan Detail Buku
     *
     * Mengambil detail buku tertentu berdasarkan ID.
     *
     * @param int book "The book ID"
     *
     * @response 200 App\Http\Resources\BookResource "Book details"
     * @response 404 App\Http\Responses\ModelNotFoundException "Book not found"
     */
    public function show(Book $book): BookResource
    {
        return new BookResource($book);
    }

    /**
     * Perbarui Buku
     *
     * Memperbarui detail buku tertentu berdasarkan ID.
     */
    /**
     * Perbarui Buku
     *
     * Memperbarui detail buku tertentu berdasarkan ID.
     *
     * @param int book "The book ID"
     *
     * @body App\Http\Requests\Book\UpdateBookRequest "Updated book data"
     *
     * @response 200 App\Http\Resources\BookResource "Updated book"
     * @response 404 App\Http\Responses\ModelNotFoundException "Book not found"
     * @response 422 App\Http\Responses\ValidationException "Validation error"
     */
    public function update(UpdateBookRequest $request, Book $book): BookResource
    {
        $book->update($request->validated());

        return new BookResource($book);
    }

    /**
     * Hapus Buku
     *
     * Menghapus buku tertentu berdasarkan ID.
     */
    /**
     * Hapus Buku
     *
     * Menghapus buku tertentu berdasarkan ID.
     *
     * @param int book "The book ID"
     *
     * @response 204 "No content"
     * @response 404 App\Http\Responses\ModelNotFoundException "Book not found"
     */
    public function destroy(Book $book): \Illuminate\Http\Response
    {
        $book->delete();

        return response()->noContent();
    }
}
