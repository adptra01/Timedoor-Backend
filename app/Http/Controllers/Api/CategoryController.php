<?php

declare(strict_types=1);

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Http\Requests\Category\StoreCategoryRequest;
use App\Http\Requests\Category\UpdateCategoryRequest;
use App\Http\Resources\CategoryResource;
use App\Models\Category;
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;

/**
 * @tag Category "Operations about categories"
 *
 * API CategoryController
 * Generated by ModelSchema Enterprise Fragment Architecture
 */
class CategoryController extends Controller
{
    /**
     * Dapatkan Semua Kategori (Terpaginasi)
     *
     * Mengambil daftar kategori yang sudah dipaginasi, dengan 10 item per halaman.
     */
    /**
     * Dapatkan Semua Kategori (Terpaginasi)
     *
     * Mengambil daftar kategori yang sudah dipaginasi, dengan 10 item per halaman.
     *
     * @response 200 App\Http\Resources\CategoryResource[] "Paginated list of categories"
     */
    public function index(): AnonymousResourceCollection
    {
        $categories = Category::paginate(10);

        return CategoryResource::collection($categories);
    }

    /**
     * Buat Kategori Baru
     *
     * Menyimpan kategori yang baru dibuat ke dalam database.
     */
    /**
     * Buat Kategori Baru
     *
     * Menyimpan kategori yang baru dibuat ke dalam database.
     *
     * @body App\Http\Requests\Category\StoreCategoryRequest "New category data"
     *
     * @response 200 App\Http\Resources\CategoryResource "Created category"
     * @response 422 App\Http\Responses\ValidationException "Validation error"
     */
    public function store(StoreCategoryRequest $request): CategoryResource
    {
        $category = Category::create($request->validated());

        return new CategoryResource($category);
    }

    /**
     * Dapatkan Detail Kategori
     *
     * Mengambil detail kategori tertentu berdasarkan ID.
     */
    /**
     * Dapatkan Detail Kategori
     *
     * Mengambil detail kategori tertentu berdasarkan ID.
     *
     * @param int category "The category ID"
     *
     * @response 200 App\Http\Resources\CategoryResource "Category details"
     * @response 404 App\Http\Responses\ModelNotFoundException "Category not found"
     */
    public function show(Category $category): CategoryResource
    {
        return new CategoryResource($category);
    }

    /**
     * Perbarui Kategori
     *
     * Memperbarui detail kategori tertentu berdasarkan ID.
     */
    /**
     * Perbarui Kategori
     *
     * Memperbarui detail kategori tertentu berdasarkan ID.
     *
     * @param int category "The category ID"
     *
     * @body App\Http\Requests\Category\UpdateCategoryRequest "Updated category data"
     *
     * @response 200 App\Http\Resources\CategoryResource "Updated category"
     * @response 404 App\Http\Responses\ModelNotFoundException "Category not found"
     * @response 422 App\Http\Responses\ValidationException "Validation error"
     */
    public function update(UpdateCategoryRequest $request, Category $category): CategoryResource
    {
        $category->update($request->validated());

        return new CategoryResource($category);
    }

    /**
     * Hapus Kategori
     *
     * Menghapus kategori tertentu berdasarkan ID.
     */
    /**
     * Hapus Kategori
     *
     * Menghapus kategori tertentu berdasarkan ID.
     *
     * @param int category "The category ID"
     *
     * @response 204 "No content"
     * @response 404 App\Http\Responses\ModelNotFoundException "Category not found"
     */
    public function destroy(Category $category): \Illuminate\Http\Response
    {
        $category->delete();

        return response()->noContent();
    }
}
